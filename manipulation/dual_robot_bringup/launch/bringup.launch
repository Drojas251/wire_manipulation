<launch>
  <!-- By default, record arm trajectories and export to JSON file -->
  <arg name="use_json" default="true"/>

  <!-- Launch Vision-->
  <include file="$(find realsense2_camera)/launch/rs_camera.launch">
    <arg name="filters"                        value="pointcloud"/>
    <arg name="align_depth"                      value="true"/>
  </include>

  <!-- Launch JSON -->
  <!-- <group if="$(arg use_json)">
    <node pkg="wire_modeling" type="json_output.py" name="json_output" output="screen" />
  </group> -->

  <!--Nodes involved with ArUco marker and coordinate monitoring-->
  <node pkg="vision" type="arm_camera_link.py" name="arm_camera_link" output="screen" /> 
  <node pkg="vision" type="arm_aruco_tracker.py" name="arm_aruco_tracker" output="screen" /> 

  <node pkg="vision" type="mounted_aruco_tracker.py" name="mounted_aruco_tracker" output="screen" />
  <!-- <node pkg="vision" type="slip_detect.py" name="left_slip_detect" output="screen" clear_params="true"/> -->
  <!-- <node pkg="vision" type="slip_detect.py" name="right_slip_detect" output="screen" clear_params="true"/> -->

  <!--Nodes involved with Segmentation of Wire-->
  <!-- <node pkg="vision" type="rgb_segmentation.py" name="rgb_segmentation" output="screen" />
  <node pkg="vision" type="process_point_cloud_server.py" name="process_point_cloud_server" output="screen" /> -->
  <!--Convert Segmented Depth image to PC-->
  <!-- <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
  <node pkg="nodelet" type="nodelet" name="nodelet1"
    args="load depth_image_proc/point_cloud_xyz nodelet_manager">
    <remap from="camera_info" to="/seg_depth/camera_info"/>
    <remap from="image_rect" to="/seg_depth/image_raw"/>
    <remap from="points" to="/rscamera/depth/points"/>
  </node> -->

  <!--Camera Transform-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="camera_broadcaster" args="-0.3556 0.0 0.4064 0 0 0 1 world camera_link" />
  <!--Aruco Marker Rotation Transform-->
  <node pkg="vision" type="aruco_rotation_transform.py" name="aruco_rotation_transform" output="screen"/>

  <!-- Launch real robots -->
  <!-- <include file="$(find wire_manipulation_moveit_config)/launch/wire_manipulation_moveit.launch"> </include> -->
  <!-- Launch demo robots -->
  <include file="$(find wire_manipulation_moveit_config)/launch/demo.launch"> </include>

  <!--Dual Robot control service-->
  <node pkg="dual_robot_control" type="robot_services.py" name="robot_services" output="screen" />

</launch>

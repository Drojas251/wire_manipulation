<launch>

  <arg name="use_sim"                       default="false"/>
  <arg name="use_actual"                       default="false"/>
  <arg name="launch_vision"                       default="true"/>

<!-- Launch Vision-->
 <group if="$(arg launch_vision)">
    <include file="$(find realsense2_camera)/launch/rs_camera.launch">
      <arg name="filters"                        value="pointcloud"/>
      <arg name="align_depth"                      value="true"/>
    </include>

    <!--Nodes involved with Segmentation of Wire-->
    <node pkg="vision" type="rgb_segmentation.py" name="rgb_segmentation" output="screen" />
    <node pkg="vision" type="process_point_cloud_server.py" name="process_point_cloud_server" output="screen" />

    <!--Convert Segmented Depth image to PC-->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" />
    <node pkg="nodelet" type="nodelet" name="nodelet1"
      args="load depth_image_proc/point_cloud_xyz nodelet_manager">
      <remap from="camera_info" to="/seg_depth/camera_info"/>
      <remap from="image_rect" to="/seg_depth/image_raw"/>
      <remap from="points" to="/rscamera/depth/points"/>
    </node>

    <!--Camera Transform-->
    <node pkg="tf2_ros" type="static_transform_publisher" name="camera_broadcaster" args="-0.3556 0.0 0.4064 0 0 0 1 world camera_link" />
</group>

  
  <!--Launch Gazebo Robot-->
  <include if="$(arg use_sim)" file="$(find dual_robot_gazebo)/launch/dual_robot_gazebo.launch"/>
  
  <!--Launch Real Robot-->
  <include if="$(arg use_actual)" file="$(find dual_robot_control)/launch/dual_robot_bringup.launch"/>

  <!--Dual Robot control service-->
  <node pkg="dual_robot_control" type="robot_services.py" name="robot_services" output="screen" />

</launch>
